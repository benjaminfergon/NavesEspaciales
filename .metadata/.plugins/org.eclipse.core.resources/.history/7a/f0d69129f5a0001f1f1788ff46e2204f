package com.naves.security;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.core.userdetails.User;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.security.web.SecurityFilterChain;

@Configuration
public class SecurityConfig {

	@Bean
    public SecurityFilterChain securityFilterChain(HttpSecurity http) throws Exception {
        http
            .authorizeHttpRequests(authorizeRequests ->
                authorizeRequests
                    .requestMatchers("/h2-console/**").permitAll() // Permite acceso a la consola de H2
                    .anyRequest().authenticated() // Requiere autenticaciÃ³n para el resto de las solicitudes
            )
            .formLogin(withDefaults()) // Configura login por formulario
            .csrf().disable() // Desactiva CSRF para habilitar la consola de H2
            .headers().frameOptions().disable(); // Permite que la consola se cargue dentro de un iframe
        return http.build();
    }

    @Bean
    public PasswordEncoder passwordEncoder() {
        return new BCryptPasswordEncoder();
    }

    @Bean
    public UserDetailsService userDetailsService() {
        return (username) -> User.builder()
                .username("Naves")
                .password(passwordEncoder().encode("pruebaNAVES"))
                .roles("USER")
                .build();
    }
}
